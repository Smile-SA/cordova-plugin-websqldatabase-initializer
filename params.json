{"name":"Cordova-plugin-websqldatabase-initializer","tagline":"Cordova plugin for WebSqlDatabase initialization","body":"This is a Cordova 3 plugin (using the new plugin management system) that enables initialization for WebSqlDatabase.\r\n\r\nIf you want your PhoneGap application to start with a preloaded WebSqlDatabase, this plugin will simplify it for you.\r\n\r\nThis plugin is compatible with iOS, Android and WP (7 & 8).\r\n\r\n\r\n## Install\r\nUsing the Cordova 3 Command-line Interface:\r\n\r\n```sh\r\ncordova plugin add org.smile.websqldatabase.initializer\r\n```\r\n\r\nIf you are not using the Cordova Command-line Interface, follow [Using Plugman to Manage Plugins](http://cordova.apache.org/docs/en/edge/plugin_ref_plugman.md.html).\r\n\r\n\r\n## Create the database containing initialization data\r\n\r\nThe database used for initialization (named \"myDemoSQLiteDB\" below) is an SQLite file with a \".db\" extension compressed in a \".zip\" file.\r\n\r\nYou can create the \".db\" file with the initial content via Chrome/Chromium using the WebSqlDatabase API (and retrieve it from the \"databases\" diretory of the [User Data Directory](http://www.chromium.org/user-experience/user-data-directory)) or with an SQLite client (sqlite3, sqlitebrowser, ...).\r\n\r\nName the resulting database binary file with a \".db\" extension and zip it.\r\n\r\n## Databases.db\r\n\r\nFor iOS and Android, a Databases.db file is required to \"index\" the available databases.\r\n\r\nTo create this file, use an SQLite client (sqlite3, sqlitebrowser, ...) and execute the following code (replacing \"myDemoSQLiteDB.db\" with the correct value):\r\n\r\n```sql\r\nCREATE TABLE Databases (guid INTEGER PRIMARY KEY AUTOINCREMENT, origin TEXT, name TEXT, displayName TEXT, estimatedSize INTEGER, path TEXT);\r\nINSERT INTO Databases VALUES(1, 'file__0', 'myDemoSQLiteDB.db', 'Proto DB', 1000000, 'myDemoSQLiteDB.db');\r\nCREATE TABLE Origins (origin TEXT UNIQUE ON CONFLICT REPLACE, quota INTEGER NOT NULL ON CONFLICT FAIL);\r\nINSERT INTO Origins VALUES('file__0',52428800);\r\n```\r\n\r\n## Usage\r\n### Android\r\n\r\n  * import \"org.smile.websqldatabase.*\" in your main class:\r\n\r\n```java\r\nimport org.smile.websqldatabase.*;\r\n```\r\n\r\n  * add \"implements DatabaseInitializable\" on your main class\r\n  * implement the getDatabaseConfig method (with the correct database configuration):\r\n\r\n```java\r\n@Override\r\npublic DatabaseConfig getDatabaseConfig() {\r\n    return new DatabaseConfig(\"myDemoSQLiteDB.zip\", \"myDemoSQLiteDB.db\");\r\n}\r\n```\r\n\r\n  * implement the loadWebApp method (with the Cordova init code usually in the onCreate method)\r\n\r\n```java\r\n@Override\r\npublic void loadWebApp() {\r\n    super.loadUrl(Config.getStartUrl());\r\n}\r\n```\r\n\r\n  * remove the Cordova init code in the onCreate method\r\n  * load the database and run the app with \"DatabaseInitializer.load(this);\" in the onCreate method\r\n\r\n```java\r\n@Override\r\npublic void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n    super.init();\r\n    DatabaseInitializer.load(this);\r\n}\r\n```\r\n\r\n  * add the \"Databases.db\" file in your assets directory\r\n  * add the zipped database (\"myDemoSQLiteDB.zip\") in your assets directory\r\n\r\n### iOS\r\n\r\n  * import \"LoadDatabase.h\" and \"DatabaseConfig.h\" in your main class\r\n\r\n```objective-c\r\n#import \"LoadDatabase.h\"\r\n#import \"DatabaseConfig.h\"\r\n```\r\n\r\n  * in the init method of your main class, call the \"load\" method on a \"LoadDatabase\" object with the correct DatabaseConfig in parameters:\r\n\r\n```objective-c\r\n[[LoadDatabase new] load:[[DatabaseConfig alloc] init:@\"myDemoSQLiteDB.zip\" secondValue:@\"myDemoSQLiteDB.db\"]];\r\n```\r\n\r\n  * add the \"Databases.db\" file in your Resources directory\r\n  * add the zipped database (\"myDemoSQLiteDB.zip\") in your Resources directory\r\n  \r\n### Windows Phone (7 & 8)\r\n\r\n  * check that the http://smile-sa.github.io/cordova-plugin-websqldatabase/ plugin (enabling WebSqlDatabase feature on Windows Phone) has been correctly installed (check that the \"plugins/org.smile.websqldatabase.wpdb\" directory exists)\r\n  * import \"org.smile.websqldatabase\" in your main class:\r\n\r\n```csharp\r\nusing org.smile.websqldatabase;\r\n```\r\n\r\n  * in the init method of your main class, call the \"LoadDatabase\" method on a \"DatabaseLoader\" object with the correct DatabaseConfig in parameters:\r\n\r\n```csharp\r\nnew DatabaseLoader().LoadDatabase(new DatabaseConfig(@\"myDemoSQLiteDB.zip\", @\"myDemoSQLiteDB.db\"));\r\n```\r\n\r\n  * add the zipped database (\"myDemoSQLiteDB.zip\") in the root directory of your solution\r\n  * no need of a \"Databases.db\" file\r\n\r\n\r\n## Usage in JavaScript\r\n\r\nLoad the database with the following code:\r\n\r\n```javascript\r\nwindow.openDatabase(\"myDemoSQLiteDB.db\", \"1.0\", \"Proto DB\", 1000000);\r\n```\r\n\r\n  \r\n## Example\r\n\r\nA prototype including this plugin is available at https://github.com/Smile-SA/cordova-plugin-websqldatabase-initializer-proto\r\n\r\n## External library\r\n\r\nThis plugin uses the following libraries:\r\n  * [ZipArchive](http://code.google.com/p/ziparchive/) (under MIT License) for iOS\r\n  * [SharpGIS.UnZipper](http://www.sharpgis.net/post/2010/08/25/REALLY-small-unzip-utility-for-Silverlight-e28093-Part-2.aspx) (under Microsoft Public License (Ms-PL)) for Windows Phone","google":"UA-539591-3","note":"Don't delete this file! It's used internally to help with page regeneration."}